title = "Life Expectancy", position = "bottomright")
Map
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
pal2 <- colorNumeric(
palette = "Reds",
domain = CountryData$Freedom)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.5,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.5,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
Map
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
pal2 <- colorNumeric(
palette = "Reds",
domain = CountryData$Freedom)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.2,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
Map
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
pal2 <- colorNumeric(
palette = "Reds",
domain = CountryData$Freedom)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.3,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
Map
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
pal2 <- colorNumeric(
palette = "Reds",
domain = CountryData$Freedom)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.2,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
Map
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.5,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.5,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
Map
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 0.6,
color = "white",
fillOpacity = 0.6,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 0.4,
color = "white",
fillOpacity = 0.4,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
Map
#####Maps(2):
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.6,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.4,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
Map
leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.3,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.5,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.7,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.3,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.3,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
#addLegend(pal = pal, values = CountryData$Happiness.Score,
#         title = "Life Expectancy", position = "bottomright")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
pal <- colorNumeric(
palette = "Blues",
domain = CountryData$Happiness.Score)
myLabels <- paste("<strong>", CountryData$Country, "</strong>", "<br/>",
"Happiness Rank:", CountryData$Happiness.Rank)
myPopups <- paste("Freedom", CountryData$Freedom)
Map <- leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.7,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.3,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.3,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
addLegend(pal = pal, values = CountryData$Happiness.Score,
title = "Life Expectancy", position = "bottomleft")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.7,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.3,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.3,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
addLegend(pal = pal, values = CountryData$Happiness.Score,
title = "Life Expectancy", position = "bottomleft")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.7,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.3,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.3,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
addLegend(pal = pal, values = CountryData$Happiness.Score,
title = "Life Expectancy", position = "bottomcenter")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
leaflet(WorldCountry) %>% addTiles() %>%
addPolygons(
fillColor = pal(CountryData$Happiness.Score),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.7,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups) %>%
addPolygons(
fillColor = pal2(CountryData$Freedom),
weight = 2,
opacity = 1,
color = "white",
fillOpacity = 0.3,
highlight = highlightOptions(weight = 3,
color = "grey",
fillOpacity = 0.3,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
addLegend(pal = pal, values = CountryData$Happiness.Score,
title = "Life Expectancy", position = "bottomleft")%>%
addLegend(pal = pal2, values = CountryData$Freedom,
title = "Life Expectancy", position = "bottomright")
install.packages("shiny")
library(shiny)
# See above for the definitions of ui and server
ui <- fluidPage(
# App title ----
titlePanel("Hello Shiny!"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
)
library(shiny)
# See above for the definitions of ui and server
ui <- fluidPage(
# App title ----
titlePanel("Hello Shiny!"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
)
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
shinyApp(ui = ui, server = server)
